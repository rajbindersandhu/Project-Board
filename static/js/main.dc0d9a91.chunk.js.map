{"version":3,"sources":["component/header.js","component/card.js","component/main.js","App.js","reportWebVitals.js","index.js"],"names":["Modal","setAppElement","Header","taskList","setTaskList","React","useState","openModal","setOpenModal","taskTitle","setTaskTitle","taskStatus","setTaskStatus","taskDef","setTaskDef","handleInput","e","target","id","value","className","onClick","style","fontSize","verticalAlign","width","backgroundColor","isOpen","overlay","content","marginLeft","marginRight","padding","onSubmit","preventDefault","type","onChange","disabled","selected","rows","cols","placeholder","taskObject","title","status","def","tempTaskList","push","Card","task","i","handleSave","dltObj","saveModal","setSaveModal","useDrag","item","collect","monitor","opacity","isDragging","drag","ref","cursor","borderRadius","fontWeight","marginBottom","Main","notStarted","filter","inProgress","completed","useDrop","accept","drop","ind","temp","moveCardNS","isOverNS","isOver","dropNS","moveCardIP","isOverIP","dropIP","moveCardC","isOverC","dropC","index","tempList","length","map","App","DndProvider","backend","HTML5Backend","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc0d9a91.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./header.css\";\r\nimport Modal from \"react-modal\";\r\nModal.setAppElement(\"body\");\r\n\r\nfunction Header({taskList,setTaskList}){\r\n    let [openModal, setOpenModal] = React.useState(false);\r\n    let [taskTitle,setTaskTitle] = React.useState(\"\");\r\n    let [taskStatus, setTaskStatus] = React.useState(\"\");\r\n    let [taskDef, setTaskDef] = React.useState(\"\");\r\n\r\n    function handleInput(e){\r\n        if(e.target.id == \"title\"){\r\n            setTaskTitle(e.target.value);\r\n        }\r\n        else if(e.target.id == \"status\"){\r\n            setTaskStatus(e.target.value);\r\n        }\r\n        else if(e.target.id == \"def\"){\r\n            setTaskDef(e.target.value);\r\n        }\r\n    }\r\n   \r\n    function saveToList(){\r\n        let taskObject = {\r\n            title : taskTitle,\r\n            status : taskStatus,\r\n            def : taskDef\r\n        };\r\n        let tempTaskList = [...taskList];\r\n        tempTaskList.push(taskObject);\r\n        setTaskList([...tempTaskList]);\r\n        setOpenModal(false);\r\n        setTaskTitle(\"\");\r\n        setTaskStatus(\"\");\r\n        setTaskDef(\"\");\r\n        //console.log(taskList);\r\n    }\r\n\r\n    return <>\r\n        <button className=\"add-btn\" onClick={()=>setOpenModal(true)}><span style={{fontSize:\"50px\",verticalAlign:\"-6px\",width:\"10px\",backgroundColor:\"black\"}}>+</span> Add New Card...</button>\r\n        {/* onClick={()=>setOpenModal(true)} */}\r\n        <Modal isOpen={openModal}\r\n            style={\r\n              {  overlay:{\r\n                    backgroundColor: \"gray\"\r\n                },\r\n                content:{\r\n                    width:\"50%\",\r\n                    marginLeft : \"auto\",\r\n                    marginRight:\"auto\",\r\n                    padding:\"5%\",\r\n                    backgroundColor:\"#e7e7e7\"\r\n                    \r\n                }\r\n            }\r\n            }\r\n        >\r\n            <div className = \"modal-box\">\r\n                <form onSubmit ={(e)=>e.preventDefault()}>\r\n                    <lable>\r\n                        <h3>Title :</h3>\r\n                        <input type=\"text\" id=\"title\" value={taskTitle} onChange={handleInput}/>\r\n                    </lable><br/>\r\n                    <label>\r\n                        <h3>Status : </h3>\r\n                        <select id=\"status\" onChange={handleInput} >\r\n                            <option  disabled selected>Select status </option>\r\n                            <option>Not Started</option>\r\n                            <option>In Progress</option>\r\n                            <option>Completed</option>\r\n                        </select>\r\n                    </label><br/>\r\n                    <label>\r\n                        <h3>Description :</h3>\r\n                        <textarea  id=\"def\" value={taskDef} onChange={handleInput} rows={10}  cols={30} placeholder=\"Enter description.....\"/>\r\n                    </label><br/>\r\n                    <div className=\"btn\">\r\n                        <button className=\"save-btn\" onClick = {saveToList}>Save</button>\r\n                        <button className = \"back-btn\" onClick = {()=>{\r\n                            setOpenModal(false);\r\n                            setTaskTitle(\"\");\r\n                            setTaskStatus(\"\");\r\n                            setTaskDef(\"\");\r\n                            }}\r\n                        >Back</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Modal>\r\n        \r\n    </>\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"./card.css\";\r\nimport {useDrag} from \"react-dnd\"\r\nimport Modal from \"react-modal\";\r\nModal.setAppElement(\"body\");\r\n\r\nfunction Card({task,i,handleSave,dltObj}){\r\n    let [saveModal,setSaveModal] = React.useState(false);\r\n    let [openModal, setOpenModal] = React.useState(false);\r\n    let [taskTitle,setTaskTitle] = React.useState(task.title);\r\n    let [taskStatus, setTaskStatus] = React.useState(task.status);\r\n    let [taskDef, setTaskDef] = React.useState(task.def);\r\n\r\n    let [{ opacity }, drag] = useDrag(() => ({\r\n        type: \"card\",\r\n        item: {\r\n            id : i,\r\n        },\r\n        collect : (monitor) =>({\r\n                    opacity : monitor.isDragging() ? 0 : 1,\r\n        })\r\n    }),[i]);\r\n\r\n    \r\n\r\n    return <div className=\"card\" ref={drag}>\r\n            <button  style = {{opacity, width:\"60%\",cursor:\"pointer\",borderRadius:\"5px\",fontWeight:\"800\",marginBottom:\"2%\",padding: \"1%\"}} onClick = {()=>setOpenModal(true)}>{task.title}</button>\r\n\r\n            <Modal \r\n                isOpen={openModal}\r\n                style={{\r\n                    overlay:{\r\n                        backgroundColor: \"gray\"\r\n                    },\r\n                    content:{\r\n                        width:\"50%\",\r\n                        marginLeft : \"auto\",\r\n                        marginRight:\"auto\",\r\n                        padding:\"5%\",\r\n                        backgroundColor:\"#e7e7e7\"\r\n                    \r\n                    }\r\n                }}\r\n                >\r\n                    <fieldset>\r\n                        <legend><b>Title  </b></legend>\r\n                        <p className=\"text\">{taskTitle}</p>\r\n                    </fieldset>\r\n                    <fieldset>\r\n                        <legend><b>Status  </b></legend>\r\n                        <p className=\"text\">{taskStatus}</p>\r\n                    </fieldset>\r\n                    <fieldset>\r\n                        <legend><b>Description  </b></legend>\r\n                        <p className=\"text\">{taskDef}</p>\r\n                    </fieldset>                  \r\n                    <div className=\"btn-box\">\r\n                        <button className=\"edit-btn\" onClick={()=>{setSaveModal(true)}}>Edit</button>\r\n                        <button className=\"bck-btn\" onClick={()=>setOpenModal(false)}>Back</button>\r\n                        <button className=\"dlt-btn\" onClick={()=> {\r\n                            dltObj(i);\r\n                            setOpenModal(false);\r\n                        }}>Delete</button>\r\n                    </div>\r\n                </Modal>\r\n\r\n                <Modal \r\n                isOpen={saveModal}\r\n                style={{\r\n                    overlay:{\r\n                        backgroundColor: \"gray\"\r\n                    },\r\n                    content:{\r\n                        width:\"50%\",\r\n                        marginLeft : \"auto\",\r\n                        marginRight:\"auto\",\r\n                        padding:\"5%\",\r\n                        backgroundColor:\"#e7e7e7\"\r\n                    }\r\n                }}\r\n                >\r\n                    <div className = \"modal-box\">\r\n                        <form onSubmit ={(e)=>e.preventDefault()}>\r\n                            <lable>\r\n                                <h3>Title : </h3>\r\n                                <input type=\"text\" id=\"title\" value={taskTitle} onChange={(e)=>setTaskTitle(e.target.value)}/>\r\n                            </lable><br/>\r\n                            <label>\r\n                                <h3>Status : </h3>\r\n                                <select id=\"status\" onChange={(e)=>setTaskStatus(e.target.value)}>\r\n                                    <option  disabled selected>Select status</option>\r\n                                    <option>Not Started</option>\r\n                                    <option>In Progress</option>\r\n                                    <option>Completed</option>\r\n                                </select>\r\n                            </label><br/>\r\n                            <label>\r\n                                <h3>Description : </h3>\r\n                                <textarea  id=\"def\" value={taskDef} onChange={(e) => setTaskDef(e.target.value)} rows={10} placeholder=\"Enter description.....\"/>\r\n                            </label><br/>\r\n                            <div className=\"btn\">\r\n                                <button className=\"save-btn\" onClick = {() => {\r\n                                    let tempObjt = {\r\n                                        title : taskTitle,\r\n                                        status : taskStatus,\r\n                                        def : taskDef\r\n                                    }\r\n                                    handleSave(tempObjt,i);\r\n                                    setOpenModal(true);\r\n                                    setSaveModal(false);\r\n                                    }}>Save</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </Modal>\r\n    </div>\r\n\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport \"./main.css\";\r\nimport Card from \"./card\";\r\nimport {useDrop} from \"react-dnd\";\r\n\r\n\r\nfunction Main({taskList,setTaskList}){\r\n\r\n    const notStarted = taskList.filter((task) => task.status === \"Not Started\");\r\n    const inProgress = taskList.filter((task) => task.status === \"In Progress\");\r\n    const completed = taskList.filter((task) => task.status === \"Completed\");\r\n\r\n    const [{isOverNS}, dropNS] = useDrop({\r\n        accept:\"card\",\r\n        drop : (item, monitor) => moveCardNS(item.id),\r\n        collect: (monitor) => ({\r\n            isOverNS : !!monitor.isOver()\r\n        })\r\n    });\r\n    const [{isOverIP}, dropIP] = useDrop({\r\n        accept:\"card\",\r\n        drop : (item, monitor) => moveCardIP(item.id),\r\n        collect: (monitor) => ({\r\n            isOverIP : !!monitor.isOver()\r\n        })\r\n    });\r\n    const [{isOverC}, dropC] = useDrop({\r\n        accept:\"card\",\r\n        drop : (item, monitor) => moveCardC(item.id),\r\n        collect: (monitor) => ({\r\n            isOverC : !!monitor.isOver()\r\n        })\r\n    });\r\n\r\n    function moveCardNS(ind){\r\n        let temp = [...taskList];\r\n        temp[ind].status = \"Not Started\";\r\n        setTaskList([...temp]);\r\n\r\n    }\r\n    function moveCardIP(ind){\r\n        let temp = [...taskList];\r\n        temp[ind].status = \"In Progress\";\r\n        setTaskList([...temp]);\r\n\r\n    }\r\n    function moveCardC(ind){\r\n        let temp = [...taskList];\r\n        temp[ind].status = \"Completed\";\r\n        setTaskList([...temp]);\r\n\r\n    }\r\n\r\n    //console.log(notStarted,inProgress,completed);\r\n    function handleSave(item,index){\r\n        let tempList = []\r\n        for(let i=0;i<taskList.length;i++){\r\n            if(i == index){\r\n                tempList.push(item);\r\n            }\r\n            else{\r\n                tempList.push(taskList[i]);\r\n            }\r\n        }\r\n        setTaskList([...tempList]);\r\n    }\r\n\r\n    function dltObj(index){\r\n        let tempList = []\r\n        for(let i=0;i<taskList.length;i++){\r\n            if(i !== index){\r\n                tempList.push(taskList[i]);\r\n            }\r\n        }\r\n        setTaskList([...tempList]);\r\n    }\r\n\r\n    return <div className=\"main-box\">\r\n\r\n        <div className=\"box\" ref={dropNS}>\r\n            <p>Not Started <sup>{notStarted.length}</sup></p>\r\n            {notStarted &&  taskList.map((task,index)=> task.status ==\"Not Started\" ? <Card task={task} i={index} handleSave ={handleSave} dltObj={dltObj}  key ={index}/> : null)}\r\n        </div>\r\n        <div className=\"box\" ref={dropIP}>\r\n            <p>In Progress <sup>{inProgress.length}</sup></p>\r\n            {inProgress &&  taskList.map((task,index)=> task.status ==\"In Progress\" ? <Card task={task} i={index} handleSave ={handleSave} dltObj={dltObj} key ={index}/> : null)}\r\n        </div>\r\n        <div className=\"box\" ref={dropC}>\r\n            <p>Completed <sup>{completed.length}</sup></p>\r\n            {completed &&  taskList.map((task,index)=> task.status ==\"Completed\" ? <Card task={task} i={index} handleSave ={handleSave} dltObj={dltObj}  key ={index}/> : null)}\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default Main;","import React from \"react\";\nimport Header from \"./component/header\";\nimport Main from \"./component/main\";\nimport {DndProvider} from \"react-dnd\";\nimport {HTML5Backend} from \"react-dnd-html5-backend\";\nimport './App.css';\n\n\nfunction App() {\n  let [taskList, setTaskList] = React.useState([])\n  return (\n    <div className=\"App\">\n      <Header taskList={taskList} setTaskList={setTaskList}/>\n      <DndProvider backend = {HTML5Backend}>\n        <Main taskList={taskList} setTaskList={setTaskList}/>\n      </DndProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}